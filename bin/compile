#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

set -e
set -o pipefail

BUILD_DIR=$1
CACHE_DIR=$2

mkdir -p $BUILD_DIR $CACHE_DIR

function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

mv $BUILD_DIR/src $CACHE_DIR

# Nginx
cd $CACHE_DIR/src/nginx
echo "-----> NGINX"
if [ -f configure ]; then
  echo "-----> Configuring"
  ./configure --prefix=/app/vendor/nginx --with-pcre=$CACHE_DIR/src/pcre 2>&1 | indent

  echo "-----> Compiling"
  make 2>&1 | indent

  echo "-----> Installing"
  make install 2>&1 | indent
  cp $BUILD_DIR/config/nginx.conf.erb /app/vendor/nginx/conf/nginx.conf.erb
fi

# PHP
cd $CACHE_DIR/src/php
echo "-----> PHP"
if [ -f configure ]; then
  echo "-----> Configuring "
  ./configure --prefix=/app/vendor/php --with-mysql --with-pdo-mysql --with-iconv --with-gd --with-curl=/usr/lib --with-config-file-path=/app/vendor/php --with-openssl 2>&1 | indent

  echo "-----> Compiling"
  make 2>&1 | indent

  echo "-----> Installing"
  make install 2>&1 | indent

  # cp $BUILD_DIR/config/php.ini $BUILD_DIR/vendor/php/php.ini
fi

# setup web script
cd $BUILD_DIR
cat >>boot.sh <<EOF
erb ./vendor/nginx/conf/nginx.conf.erb > ./vendor/nginx/conf/nginx.conf
touch ./vendor/nginx/logs/access.log ./vendor/nginx/logs/error.log
# mkdir -p client_body_temp fastcgi_temp proxy_temp scgi_temp uwsgi_temp
(tail -f -n 0 ./vendor/nginx/logs/*.log &)
PHP_FCGI_CHILDREN=5 PHP_FCGI_MAX_REQUESTS=1000 php-cgi -b /tmp/php-fastcgi.socket &
nginx -p ./vendor/nginx
EOF
chmod +x boot.sh