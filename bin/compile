#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

set -e
set -o pipefail

BUILD_DIR=$1
CACHE_DIR=$2

mkdir -p $BUILD_DIR $CACHE_DIR

function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

echo "-----> Compiling Jekyll site"

# Install Jekyll into hidden directory in app roote

cat << EOF > ~/.gemrc
gemhome: $1/.gems
gempath:
- $1/.gems
EOF

/usr/local/bin/gem install liquid -v 2.2.2 --no-rdoc --no-ri | indent
/usr/local/bin/gem install jekyll redcarpet sass --no-rdoc --no-ri | indent

# Run Jekyll
echo "Running Jekyll" | indent
export GEM_HOME=$1/.gems
export PATH=$1/.gems/bin:$PATH
cd $1
$1/.gems/bin/jekyll | indent
$1/.gems/bin/sass sass/style.scss style.css | indent

mv $BUILD_DIR/src $CACHE_DIR

# Nginx
cd $CACHE_DIR/src/nginx
echo "-----> NGINX"
if [ -f configure ]; then
  echo "-----> Configuring"
  ./configure --prefix=${BUILD_DIR}/vendor/nginx --with-pcre=$CACHE_DIR/src/pcre 2>&1 | indent

  echo "-----> Compiling"
  make 2>&1 | indent

  echo "-----> Installing"
  make install 2>&1 | indent
  cp $BUILD_DIR/config/nginx.conf.erb ${BUILD_DIR}/vendor/nginx/conf/nginx.conf.erb
fi

# setup web script
cd $BUILD_DIR
cat >>boot.sh <<EOF
erb ./vendor/nginx/conf/nginx.conf.erb > ./vendor/nginx/conf/nginx.conf
touch ./vendor/nginx/logs/access.log ./vendor/nginx/logs/error.log
mkdir -p client_body_temp fastcgi_temp proxy_temp scgi_temp uwsgi_temp
(tail -f -n 0 ./vendor/nginx/logs/*.log &)
nginx -p ./vendor/nginx
EOF
chmod +x boot.sh