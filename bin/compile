#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

set -e
set -o pipefail

BUILD_DIR=$1
CACHE_DIR=$2

mkdir -p $BUILD_DIR $CACHE_DIR

function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

# configure, make, install nginx
mv $BUILD_DIR/nginx $CACHE_DIR
cd $CACHE_DIR/nginx
# cd $BUILD_DIR/nginx
if [ -f configure ]; then
  echo "-----> Configuring Nginx"
  ./configure --prefix=${BUILD_DIR}/nginx --without-http_rewrite_module --with-http_ssl_module --with-pcre 2>&1 | indent

  echo "-----> Compiling"
  make 2>&1 | indent

  echo "-----> Installing"
  make install 2>&1 | indent

  cp $CACHE_DIR/nginx/conf/nginx.wordpress.conf.erb $BUILD_DIR/nginx/conf/nginx.conf.erb
fi

# configure, make, install PHP
mv $BUILD_DIR/php $CACHE_DIR
cd $CACHE_DIR/php
# cd $BUILD_DIR/php
if [ -f configure ]; then
  echo "-----> Configuring PHP"
  ./configure --prefix=${BUILD_DIR}/php 2>&1 | indent

  echo "-----> Compiling"
  make 2>&1 | indent

  echo "-----> Installing"
  make install 2>&1 | indent
fi

# setup web script
cd $BUILD_DIR
cat >>boot.sh <<EOF
erb nginx/conf/nginx.conf.erb > nginx/conf/nginx.conf
touch nginx/logs/access.log nginx/logs/error.log
mkdir -p client_body_temp fastcgi_temp proxy_temp scgi_temp uwsgi_temp
(tail -f -n 0 nginx/logs/*.log &)
PHP_FCGI_CHILDREN=5 PHP_FCGI_MAX_REQUESTS=1000 php-cgi -b /tmp/php-fastcgi.socket &
nginx -p ./nginx
EOF
chmod +x boot.sh